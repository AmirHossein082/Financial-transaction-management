
version: '3.8'

services:
  # Zookeeper
  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    restart: always
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"
    networks:
      - springboot-network

  # Kafka
  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    restart: always
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9093,DOCKER://kafka:9094
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9093,DOCKER://0.0.0.0:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9093:9093"
    networks:
      - springboot-network

  # PostgreSQL
  postgres:
    image: postgres:latest
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_USER: amir
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: my-db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - springboot-network

#   Spring Boot App
  app:
    build: .
    container_name: spring_boot_app
    restart: always
    depends_on:
      - postgres
      - kafka
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9094
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-db:5432/my-db
      SPRING_DATASOURCE_USERNAME: amir
      SPRING_DATASOURCE_PASSWORD: 123
    ports:
      - "8080:8080"
    networks:
      - springboot-network

networks:
  springboot-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
